package trikita.anvil.v10;

import android.appwidget.AppWidgetHostView;
import android.gesture.GestureOverlayView;
import android.inputmethodservice.ExtractEditText;
import android.inputmethodservice.KeyboardView;
import android.opengl.GLSurfaceView;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.webkit.WebView;
import android.widget.AbsListView;
import android.widget.AbsSeekBar;
import android.widget.AbsSpinner;
import android.widget.AbsoluteLayout;
import android.widget.AdapterView;
import android.widget.AnalogClock;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CheckedTextView;
import android.widget.Chronometer;
import android.widget.CompoundButton;
import android.widget.DatePicker;
import android.widget.DialerFilter;
import android.widget.DigitalClock;
import android.widget.EditText;
import android.widget.ExpandableListView;
import android.widget.FrameLayout;
import android.widget.Gallery;
import android.widget.GridView;
import android.widget.HorizontalScrollView;
import android.widget.ImageButton;
import android.widget.ImageSwitcher;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.MediaController;
import android.widget.MultiAutoCompleteTextView;
import android.widget.ProgressBar;
import android.widget.QuickContactBadge;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RatingBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.SlidingDrawer;
import android.widget.Spinner;
import android.widget.TabHost;
import android.widget.TabWidget;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextSwitcher;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.ToggleButton;
import android.widget.TwoLineListItem;
import android.widget.VideoView;
import android.widget.ViewAnimator;
import android.widget.ViewFlipper;
import android.widget.ViewSwitcher;
import android.widget.ZoomButton;
import android.widget.ZoomControls;
import trikita.anvil.Nodes;

/**
 * Helper methods to simplify view declaration in the layouts
 * This file was generated by {@code gradle generateAttrs}
 */
public class Views extends trikita.anvil.Nodes {
  public static Nodes.ViewNode gestureOverlayView(INode<? super ViewGroup>... args) {
    return v(GestureOverlayView.class, args);
  }

  public static Nodes.ViewNode appWidgetHostView(INode<? super ViewGroup>... args) {
    return v(AppWidgetHostView.class, args);
  }

  public static Nodes.ViewNode editText(Nodes.AttrNode... args) {
    return v(EditText.class, args);
  }

  public static Nodes.ViewNode viewSwitcher(INode<? super ViewGroup>... args) {
    return v(ViewSwitcher.class, args);
  }

  public static Nodes.ViewNode horizontalScrollView(INode<? super ViewGroup>... args) {
    return v(HorizontalScrollView.class, args);
  }

  public static Nodes.ViewNode mediaController(INode<? super ViewGroup>... args) {
    return v(MediaController.class, args);
  }

  public static Nodes.ViewNode tableLayout(INode<? super ViewGroup>... args) {
    return v(TableLayout.class, args);
  }

  public static Nodes.ViewNode listView(INode<? super ViewGroup>... args) {
    return v(ListView.class, args);
  }

  public static Nodes.ViewNode absSeekBar(Nodes.AttrNode... args) {
    return v(AbsSeekBar.class, args);
  }

  public static Nodes.ViewNode viewAnimator(INode<? super ViewGroup>... args) {
    return v(ViewAnimator.class, args);
  }

  public static Nodes.ViewNode expandableListView(INode<? super ViewGroup>... args) {
    return v(ExpandableListView.class, args);
  }

  public static Nodes.ViewNode gallery(INode<? super ViewGroup>... args) {
    return v(Gallery.class, args);
  }

  public static Nodes.ViewNode gridView(INode<? super ViewGroup>... args) {
    return v(GridView.class, args);
  }

  public static Nodes.ViewNode videoView(Nodes.AttrNode... args) {
    return v(VideoView.class, args);
  }

  public static Nodes.ViewNode relativeLayout(INode<? super ViewGroup>... args) {
    return v(RelativeLayout.class, args);
  }

  public static Nodes.ViewNode viewFlipper(INode<? super ViewGroup>... args) {
    return v(ViewFlipper.class, args);
  }

  public static Nodes.ViewNode multiAutoCompleteTextView(Nodes.AttrNode... args) {
    return v(MultiAutoCompleteTextView.class, args);
  }

  public static Nodes.ViewNode quickContactBadge(Nodes.AttrNode... args) {
    return v(QuickContactBadge.class, args);
  }

  public static Nodes.ViewNode checkedTextView(Nodes.AttrNode... args) {
    return v(CheckedTextView.class, args);
  }

  public static Nodes.ViewNode ratingBar(Nodes.AttrNode... args) {
    return v(RatingBar.class, args);
  }

  public static Nodes.ViewNode tabHost(INode<? super ViewGroup>... args) {
    return v(TabHost.class, args);
  }

  public static Nodes.ViewNode tabWidget(INode<? super ViewGroup>... args) {
    return v(TabWidget.class, args);
  }

  public static Nodes.ViewNode radioGroup(INode<? super ViewGroup>... args) {
    return v(RadioGroup.class, args);
  }

  public static Nodes.ViewNode zoomButton(Nodes.AttrNode... args) {
    return v(ZoomButton.class, args);
  }

  public static Nodes.ViewNode adapterView(INode<? super ViewGroup>... args) {
    return v(AdapterView.class, args);
  }

  public static Nodes.ViewNode absListView(INode<? super ViewGroup>... args) {
    return v(AbsListView.class, args);
  }

  public static Nodes.ViewNode chronometer(Nodes.AttrNode... args) {
    return v(Chronometer.class, args);
  }

  public static Nodes.ViewNode checkBox(Nodes.AttrNode... args) {
    return v(CheckBox.class, args);
  }

  public static Nodes.ViewNode digitalClock(Nodes.AttrNode... args) {
    return v(DigitalClock.class, args);
  }

  public static Nodes.ViewNode textView(Nodes.AttrNode... args) {
    return v(TextView.class, args);
  }

  public static Nodes.ViewNode timePicker(INode<? super ViewGroup>... args) {
    return v(TimePicker.class, args);
  }

  public static Nodes.ViewNode textSwitcher(INode<? super ViewGroup>... args) {
    return v(TextSwitcher.class, args);
  }

  public static Nodes.ViewNode imageSwitcher(INode<? super ViewGroup>... args) {
    return v(ImageSwitcher.class, args);
  }

  public static Nodes.ViewNode linearLayout(INode<? super ViewGroup>... args) {
    return v(LinearLayout.class, args);
  }

  public static Nodes.ViewNode dialerFilter(INode<? super ViewGroup>... args) {
    return v(DialerFilter.class, args);
  }

  public static Nodes.ViewNode tableRow(INode<? super ViewGroup>... args) {
    return v(TableRow.class, args);
  }

  public static Nodes.ViewNode autoCompleteTextView(Nodes.AttrNode... args) {
    return v(AutoCompleteTextView.class, args);
  }

  public static Nodes.ViewNode compoundButton(Nodes.AttrNode... args) {
    return v(CompoundButton.class, args);
  }

  public static Nodes.ViewNode analogClock(Nodes.AttrNode... args) {
    return v(AnalogClock.class, args);
  }

  public static Nodes.ViewNode absSpinner(INode<? super ViewGroup>... args) {
    return v(AbsSpinner.class, args);
  }

  public static Nodes.ViewNode seekBar(Nodes.AttrNode... args) {
    return v(SeekBar.class, args);
  }

  public static Nodes.ViewNode datePicker(INode<? super ViewGroup>... args) {
    return v(DatePicker.class, args);
  }

  public static Nodes.ViewNode imageView(Nodes.AttrNode... args) {
    return v(ImageView.class, args);
  }

  public static Nodes.ViewNode progressBar(Nodes.AttrNode... args) {
    return v(ProgressBar.class, args);
  }

  public static Nodes.ViewNode scrollView(INode<? super ViewGroup>... args) {
    return v(ScrollView.class, args);
  }

  public static Nodes.ViewNode button(Nodes.AttrNode... args) {
    return v(Button.class, args);
  }

  public static Nodes.ViewNode twoLineListItem(INode<? super ViewGroup>... args) {
    return v(TwoLineListItem.class, args);
  }

  public static Nodes.ViewNode absoluteLayout(INode<? super ViewGroup>... args) {
    return v(AbsoluteLayout.class, args);
  }

  public static Nodes.ViewNode zoomControls(INode<? super ViewGroup>... args) {
    return v(ZoomControls.class, args);
  }

  public static Nodes.ViewNode spinner(INode<? super ViewGroup>... args) {
    return v(Spinner.class, args);
  }

  public static Nodes.ViewNode slidingDrawer(INode<? super ViewGroup>... args) {
    return v(SlidingDrawer.class, args);
  }

  public static Nodes.ViewNode toggleButton(Nodes.AttrNode... args) {
    return v(ToggleButton.class, args);
  }

  public static Nodes.ViewNode radioButton(Nodes.AttrNode... args) {
    return v(RadioButton.class, args);
  }

  public static Nodes.ViewNode frameLayout(INode<? super ViewGroup>... args) {
    return v(FrameLayout.class, args);
  }

  public static Nodes.ViewNode imageButton(Nodes.AttrNode... args) {
    return v(ImageButton.class, args);
  }

  public static Nodes.ViewNode webView(INode<? super ViewGroup>... args) {
    return v(WebView.class, args);
  }

  public static Nodes.ViewNode viewStub(Nodes.AttrNode... args) {
    return v(ViewStub.class, args);
  }

  public static Nodes.ViewNode view(Nodes.AttrNode... args) {
    return v(View.class, args);
  }

  public static Nodes.ViewNode surfaceView(Nodes.AttrNode... args) {
    return v(SurfaceView.class, args);
  }

  public static Nodes.ViewNode viewGroup(INode<? super ViewGroup>... args) {
    return v(ViewGroup.class, args);
  }

  public static Nodes.ViewNode extractEditText(Nodes.AttrNode... args) {
    return v(ExtractEditText.class, args);
  }

  public static Nodes.ViewNode keyboardView(Nodes.AttrNode... args) {
    return v(KeyboardView.class, args);
  }

  public static Nodes.ViewNode gLSurfaceView(Nodes.AttrNode... args) {
    return v(GLSurfaceView.class, args);
  }
}
